---
apiVersion: v1
kind: Namespace
metadata:
  name: tools
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: filebrowser-config
  namespace: tools
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebrowser-config
  namespace: tools
data:
  .filebrowser.json: |
    {
      "port": 80,
      "baseURL": "",
      "address": "",
      "log": "stdout",
      "database": "/database/filebrowser.db",
      "root": "/srv",
      "auth": {
        "method": "json",
        "header": ""
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filebrowser
  namespace: tools
  labels:
    app: filebrowser
spec:
  replicas: 1
  selector:
    matchLabels:
      app: filebrowser
  template:
    metadata:
      labels:
        app: filebrowser
    spec:
      containers:
        - name: filebrowser
          image: filebrowser/filebrowser:latest
          ports:
            - containerPort: 80
              name: http
          volumeMounts:
            - mountPath: /srv
              name: data
            - mountPath: /database
              name: filebrowser-config
            - mountPath: /.filebrowser.json
              name: filebrowser-settings
              subPath: .filebrowser.json
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"
      volumes:
        - name: data
          hostPath:
            path: /tank
            type: Directory
        - name: filebrowser-config
          persistentVolumeClaim:
            claimName: filebrowser-config
        - name: filebrowser-settings
          configMap:
            name: filebrowser-config
---
apiVersion: v1
kind: Service
metadata:
  name: filebrowser
  namespace: tools
  annotations:
    caddy.ingress/host: "files.example.com"  # Replace with your actual domain
spec:
  selector:
    app: filebrowser
  ports:
    - port: 80
      targetPort: 80
  type: ClusterIP