---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config
  namespace: media
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-cache
  namespace: media
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: media
  labels:
    app: jellyfin
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: jellyfin
          image: jellyfin/jellyfin:latest
          ports:
            - containerPort: 8096
              name: http
            - containerPort: 8920
              name: https
            - containerPort: 7359
              name: discovery-udp
              protocol: UDP
            - containerPort: 1900
              name: dlna-udp
              protocol: UDP
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "America/New_York"
            - name: JELLYFIN_PublishedServerUrl
              value: "jellyfin.example.com"  # Replace with your actual domain
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /cache
              name: cache
            - mountPath: /media
              name: media
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "4Gi"
              cpu: "3000m"
          securityContext:
            allowPrivilegeEscalation: false
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: jellyfin-config
        - name: cache
          persistentVolumeClaim:
            claimName: jellyfin-cache
        - name: media
          hostPath:
            path: /tank/media
            type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: media
  annotations:
    caddy.ingress/host: "jellyfin.example.com"  # Replace with your actual domain
spec:
  selector:
    app: jellyfin
  ports:
    - name: http
      port: 8096
      targetPort: 8096
      protocol: TCP
    - name: https
      port: 8920
      targetPort: 8920
      protocol: TCP
    - name: discovery
      port: 7359
      targetPort: 7359
      protocol: UDP
    - name: dlna
      port: 1900
      targetPort: 1900
      protocol: UDP
  type: ClusterIP